"""
Simple analysis boilerplate

Usage:
    1a) Implement read_data() to create data object used for analysis
        Use @from_pickle decorator if the creation of the data object is
        expensive und you want to to create a pickled cache
    1b) If  you have mulitple data object create a read_XXX() function for
        each if you want to use the @from_pickle decorator
    2a) Call each read_XXXX() method once in analyse()
    2b) Implement analyse / plotting here

"""
from crownetutils.uitls import PathHelper, from_pickle
import matplotlib.pyplot as plt


# PathHelper hat current location.
p = PathHelper(".")

@from_pickle(path="./analysis.p")
def read_data():
    # todo: Implement me
    _obj = None
    return _obj


def analyse():
    # read data from raw input or access pickled object
    obj = read_data()

    # todo: make some analysis


if __name__ == "__main__":
    analyse()


